// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Popover /> when popover is closed renders correctly 1`] = `
<div>
  <OnClickOutside(Base)
    eventTypes={
      Array [
        "mousedown",
        "touchstart",
      ]
    }
    excludeScrollbar={false}
    modifiers={
      Object {
        "preventOverflow": Object {
          "enabled": false,
        },
      }
    }
    outsideClickIgnoreClass="ignore-react-onclickoutside"
    preventDefault={false}
    stopPropagation={false}
  >
    <Base
      disableOnClickOutside={[Function]}
      enableOnClickOutside={[Function]}
      eventTypes={
        Array [
          "mousedown",
          "touchstart",
        ]
      }
      modifiers={
        Object {
          "preventOverflow": Object {
            "enabled": false,
          },
        }
      }
      outsideClickIgnoreClass="ignore-react-onclickoutside"
      preventDefault={false}
      stopPropagation={false}
      zIndex={1}
    >
      <Manager>
        <Reference>
          <InnerReference
            setReferenceNode={[Function]}
          >
            <Styled(div)>
              <div
                className="css-xt9xmq e1dqxh4r0"
              >
                <button
                  disabled={false}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                >
                  Open popover
                </button>
              </div>
            </Styled(div)>
          </InnerReference>
        </Reference>
      </Manager>
    </Base>
  </OnClickOutside(Base)>
</div>
`;

exports[`<Popover /> when popover is open renders correctly 1`] = `
<div>
  <OnClickOutside(Base)
    eventTypes={
      Array [
        "mousedown",
        "touchstart",
      ]
    }
    excludeScrollbar={false}
    modifiers={
      Object {
        "preventOverflow": Object {
          "enabled": false,
        },
      }
    }
    outsideClickIgnoreClass="ignore-react-onclickoutside"
    preventDefault={false}
    stopPropagation={false}
  >
    <Base
      disableOnClickOutside={[Function]}
      enableOnClickOutside={[Function]}
      eventTypes={
        Array [
          "mousedown",
          "touchstart",
        ]
      }
      modifiers={
        Object {
          "preventOverflow": Object {
            "enabled": false,
          },
        }
      }
      outsideClickIgnoreClass="ignore-react-onclickoutside"
      preventDefault={false}
      stopPropagation={false}
      zIndex={1}
    >
      <Manager>
        <Reference>
          <InnerReference
            setReferenceNode={[Function]}
          >
            <Styled(div)>
              <div
                className="css-xt9xmq e1dqxh4r0"
              >
                <button
                  disabled={true}
                  onClick={[Function]}
                  onKeyDown={[Function]}
                >
                  Open popover
                </button>
              </div>
            </Styled(div)>
          </InnerReference>
        </Reference>
        <Popper
          modifiers={
            Object {
              "preventOverflow": Object {
                "enabled": false,
              },
            }
          }
        >
          <InnerPopper
            eventsEnabled={true}
            modifiers={
              Object {
                "preventOverflow": Object {
                  "enabled": false,
                },
              }
            }
            placement="bottom"
            positionFixed={false}
            referenceElement={
              <div
                class="css-xt9xmq e1dqxh4r0"
              >
                <button
                  disabled=""
                >
                  Open popover
                </button>
              </div>
            }
          >
            <ContentWrapper
              aria-hidden="true"
              className="ignore-react-onclickoutside"
              style={
                Object {
                  "left": 0,
                  "opacity": 0,
                  "pointerEvents": "none",
                  "position": "absolute",
                  "top": 0,
                }
              }
              zIndex={1}
            >
              <div
                aria-hidden="true"
                className="ignore-react-onclickoutside css-1cvlz36-ContentWrapper e19q0tfi0"
                style={
                  Object {
                    "left": 0,
                    "opacity": 0,
                    "pointerEvents": "none",
                    "position": "absolute",
                    "top": 0,
                  }
                }
              >
                <p
                  key=".1"
                >
                  Popover contents
                </p>
                <TriangleBorder
                  style={Object {}}
                >
                  <div
                    className="css-shr945-Triangle-TriangleBorder e19q0tfi2"
                    style={Object {}}
                  />
                </TriangleBorder>
                <Triangle
                  style={Object {}}
                >
                  <div
                    className="css-11t0ney-Triangle e19q0tfi1"
                    style={Object {}}
                  />
                </Triangle>
              </div>
            </ContentWrapper>
          </InnerPopper>
        </Popper>
      </Manager>
    </Base>
  </OnClickOutside(Base)>
</div>
`;
