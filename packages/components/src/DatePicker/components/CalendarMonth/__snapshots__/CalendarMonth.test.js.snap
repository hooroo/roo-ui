// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CalendarMonth /> renders correctly 1`] = `
<Box
  blacklist={
    Array [
      "m",
      "mt",
      "mr",
      "mb",
      "ml",
      "mx",
      "my",
      "p",
      "pt",
      "pr",
      "pb",
      "pl",
      "px",
      "py",
      "width",
      "w",
      "minWidth",
      "maxWidth",
      "height",
      "minHeight",
      "maxHeight",
      "color",
      "bg",
      "textAlign",
      "align",
      "boxShadow",
      "borderRadius",
      "border",
      "borderTop",
      "borderRight",
      "borderBottom",
      "borderLeft",
      "borderColor",
      "flexBasis",
      "flex",
      "position",
      "zIndex",
      "monthsToDisplay",
      "stacked",
    ]
  }
  monthsToDisplay={1}
  stacked={true}
>
  <Text
    blacklist={
      Array [
        "textStyle",
        "color",
        "bg",
        "fontSize",
        "f",
        "fontWeight",
        "letterSpacing",
        "lineHeight",
        "m",
        "mt",
        "mr",
        "mb",
        "ml",
        "mx",
        "my",
        "p",
        "pt",
        "pr",
        "pb",
        "pl",
        "px",
        "py",
        "textAlign",
        "align",
        "textDecoration",
        "hidden",
      ]
    }
    hidden={false}
    textStyle="caps"
  >
    Jul
     
    2018
  </Text>
  <CalendarWeekdays
    month={7}
    weekdayNames={
      Array [
        "S",
        "M",
        "T",
        "W",
        "T",
        "F",
        "S",
      ]
    }
    year={2018}
  />
  <Box>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201870"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      8
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201871"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      9
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201872"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      10
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201873"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      11
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201874"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      12
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201875"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      13
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201876"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      15
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201870"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      15
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201871"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      16
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201872"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      17
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201873"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      18
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201874"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      19
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201875"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      20
    </CalendarDay>
    <CalendarDay
      _isMockFunction={true}
      disabled={false}
      getMockImplementation={[Function]}
      getMockName={[Function]}
      key="201876"
      mock={
        Object {
          "calls": Array [],
          "instances": Array [],
          "invocationCallOrder": Array [],
          "results": Array [],
        }
      }
      mockClear={[Function]}
      mockImplementation={[Function]}
      mockImplementationOnce={[Function]}
      mockName={[Function]}
      mockRejectedValue={[Function]}
      mockRejectedValueOnce={[Function]}
      mockReset={[Function]}
      mockResolvedValue={[Function]}
      mockResolvedValueOnce={[Function]}
      mockRestore={[Function]}
      mockReturnThis={[Function]}
      mockReturnValue={[Function]}
      mockReturnValueOnce={[Function]}
      selectable={true}
    >
      22
    </CalendarDay>
  </Box>
</Box>
`;
