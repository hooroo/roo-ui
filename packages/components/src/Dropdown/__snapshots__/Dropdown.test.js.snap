// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Dropdown /> renders correctly when closed 1`] = `
<Box
  aria-expanded={false}
  aria-haspopup="listbox"
  aria-labelledby="downshift-0-label"
  aria-owns={null}
  innerRef={[Function]}
  role="combobox"
>
  <NakedButton
    aria-haspopup={true}
    aria-label="open menu"
    blacklist={
      Array [
        "verticalAlign",
        "m",
        "mt",
        "mr",
        "mb",
        "ml",
        "mx",
        "my",
        "p",
        "pt",
        "pr",
        "pb",
        "pl",
        "px",
        "py",
      ]
    }
    data-toggle={true}
    onBlur={[Function]}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    role="button"
    type="button"
  >
    Options
    <Text
      blacklist={
        Array [
          "textStyle",
          "color",
          "bg",
          "fontSize",
          "f",
          "fontWeight",
          "letterSpacing",
          "lineHeight",
          "m",
          "mt",
          "mr",
          "mb",
          "ml",
          "mx",
          "my",
          "p",
          "pt",
          "pr",
          "pb",
          "pl",
          "px",
          "py",
          "textAlign",
          "align",
          "textDecoration",
          "hidden",
        ]
      }
      hidden={true}
      htmlFor="downshift-0-input"
      id="downshift-0-label"
      textStyle="text"
    >
      Toggle Dropdown
    </Text>
  </NakedButton>
</Box>
`;

exports[`<Dropdown /> renders correctly when open 1`] = `
<Box
  aria-expanded={true}
  aria-haspopup="listbox"
  aria-labelledby="downshift-1-label"
  aria-owns="downshift-1-menu"
  innerRef={[Function]}
  role="combobox"
>
  <NakedButton
    aria-haspopup={true}
    aria-label="close menu"
    blacklist={
      Array [
        "verticalAlign",
        "m",
        "mt",
        "mr",
        "mb",
        "ml",
        "mx",
        "my",
        "p",
        "pt",
        "pr",
        "pb",
        "pl",
        "px",
        "py",
      ]
    }
    data-toggle={true}
    onBlur={[Function]}
    onClick={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    role="button"
    type="button"
  >
    Options
    <Text
      blacklist={
        Array [
          "textStyle",
          "color",
          "bg",
          "fontSize",
          "f",
          "fontWeight",
          "letterSpacing",
          "lineHeight",
          "m",
          "mt",
          "mr",
          "mb",
          "ml",
          "mx",
          "my",
          "p",
          "pt",
          "pr",
          "pb",
          "pl",
          "px",
          "py",
          "textAlign",
          "align",
          "textDecoration",
          "hidden",
        ]
      }
      hidden={true}
      htmlFor="downshift-1-input"
      id="downshift-1-label"
      textStyle="text"
    >
      Toggle Dropdown
    </Text>
  </NakedButton>
  <Box>
    <Dropdown.item
      aria-selected={false}
      blacklist={
        Array [
          "highlighted",
        ]
      }
      foo="bar"
      highlighted={false}
      id="foo"
      key="0"
      onClick={[Function]}
      onMouseDown={[Function]}
      onMouseMove={[Function]}
      role="option"
    >
      Edit
    </Dropdown.item>
    <Dropdown.item
      aria-selected={false}
      blacklist={
        Array [
          "highlighted",
        ]
      }
      highlighted={false}
      id="downshift-1-item-1"
      key="1"
      onClick={[Function]}
      onMouseDown={[Function]}
      onMouseMove={[Function]}
      role="option"
    >
      Delete
    </Dropdown.item>
    <Dropdown.item
      aria-selected={false}
      blacklist={
        Array [
          "highlighted",
        ]
      }
      highlighted={false}
      id="downshift-1-item-2"
      key="2"
      onClick={[Function]}
      onMouseDown={[Function]}
      onMouseMove={[Function]}
      role="option"
    >
      Unpublish
    </Dropdown.item>
    <Dropdown.item
      aria-selected={false}
      blacklist={
        Array [
          "highlighted",
        ]
      }
      highlighted={false}
      id="downshift-1-item-3"
      key="3"
      onClick={[Function]}
      onMouseDown={[Function]}
      onMouseMove={[Function]}
      role="option"
    >
      Duplicate
    </Dropdown.item>
  </Box>
</Box>
`;
